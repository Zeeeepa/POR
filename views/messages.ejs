<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= project.config.name %> - Messages | Depla Project Manager</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
  <style>
    .message-card {
      transition: all 0.2s;
    }
    .message-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    .status-badge {
      position: absolute;
      top: 10px;
      right: 10px;
    }
    pre {
      background-color: #f8f9fa;
      padding: 10px;
      border-radius: 5px;
      max-height: 200px;
      overflow-y: auto;
    }
    .connection-status {
      display: inline-flex;
      align-items: center;
      font-size: 0.875rem;
    }
    .status-indicator {
      width: 10px;
      height: 10px;
      border-radius: 50%;
      margin-right: 6px;
    }
    .status-connected {
      background-color: #198754;
    }
    .status-disconnected {
      background-color: #dc3545;
    }
    .phase-indicator {
      display: flex;
      gap: 4px;
      margin-bottom: 10px;
    }
    .phase-dot {
      width: 12px;
      height: 12px;
      border-radius: 50%;
      background-color: #dee2e6;
    }
    .phase-dot.active {
      background-color: #0d6efd;
    }
    .phase-dot.complete {
      background-color: #198754;
    }
    .template-editor {
      font-family: monospace;
      height: 200px;
      resize: vertical;
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container">
      <a class="navbar-brand" href="/">Depla Project Manager</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav me-auto">
          <li class="nav-item">
            <a class="nav-link" href="/">Dashboard</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/projects">Projects</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/settings">Settings</a>
          </li>
        </ul>
        <div class="dropdown">
          <button class="btn btn-outline-light dropdown-toggle" type="button" id="userDropdown" data-bs-toggle="dropdown">
            <i class="bi bi-person-circle"></i> User
          </button>
          <ul class="dropdown-menu dropdown-menu-end">
            <li><a class="dropdown-item" href="#">Profile</a></li>
            <li><a class="dropdown-item" href="#">Preferences</a></li>
            <li><hr class="dropdown-divider"></li>
            <li><a class="dropdown-item" href="#">Logout</a></li>
          </ul>
        </div>
      </div>
    </div>
  </nav>

  <div class="container mt-4">
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Dashboard</a></li>
        <li class="breadcrumb-item"><a href="/projects/<%= project.config.name %>"><%= project.config.name %></a></li>
        <li class="breadcrumb-item active">Messages</li>
      </ol>
    </nav>

    <div class="d-flex justify-content-between align-items-center mb-4">
      <div>
        <h1 class="mb-2"><%= project.config.name %> - Messages</h1>
        <div class="phase-indicator">
          <% for(let i = 0; i < (project.config.totalPhases || 4); i++) { %>
            <div class="phase-dot <%= i < (project.config.completedPhases || 0) ? 'complete' : i === (project.config.currentPhaseIndex || -1) ? 'active' : '' %>"
                 title="Phase <%= i + 1 %>"></div>
          <% } %>
        </div>
      </div>
      <div class="d-flex align-items-center">
        <div class="connection-status me-3">
          <span class="status-indicator status-connected"></span>
          GitHub Connected
        </div>
        <div class="btn-group">
          <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#phaseConfigModal">
            <i class="bi bi-gear"></i> Configure Phase
          </button>
          <button class="btn btn-success" onclick="startPhase()">
            <i class="bi bi-play-fill"></i> Start Phase
          </button>
        </div>
      </div>
    </div>

    <!-- Current Phase Info -->
    <div class="card mb-4">
      <div class="card-header">
        <h5 class="mb-0">Current Phase: <%= project.config.currentPhase || 'Not Started' %></h5>
      </div>
      <div class="card-body">
        <div class="row">
          <div class="col-md-4">
            <div class="mb-3">
              <label class="form-label">Template Type</label>
              <div class="form-control-plaintext">
                <%= project.config.currentTemplateType || 'Not Set' %>
              </div>
            </div>
          </div>
          <div class="col-md-4">
            <div class="mb-3">
              <label class="form-label">Concurrent Tasks</label>
              <div class="form-control-plaintext">
                <%= project.config.concurrentTasks || 0 %> tasks
              </div>
            </div>
          </div>
          <div class="col-md-4">
            <div class="mb-3">
              <label class="form-label">Code Analysis</label>
              <div class="form-control-plaintext">
                <%= project.config.requiresAnalysis ? 'Required' : 'Not Required' %>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Message Queue -->
    <div class="card mb-4">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Message Queue</h5>
        <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addMessageModal">
          <i class="bi bi-plus-lg"></i> Add Message
        </button>
      </div>
      <div class="card-body">
        <div class="list-group">
          <% (project.messages || []).forEach(message => { %>
            <div class="list-group-item message-card">
              <div class="d-flex justify-content-between align-items-start">
                <div>
                  <h6 class="mb-1"><%= message.title %></h6>
                  <p class="mb-1"><%= message.content %></p>
                  <small class="text-muted">
                    Template: <%= message.template %> | 
                    Dependencies: <%= message.dependencies.join(', ') || 'None' %>
                  </small>
                </div>
                <div class="badge <%= message.status === 'completed' ? 'bg-success' : message.status === 'pending' ? 'bg-warning' : 'bg-primary' %>">
                  <%= message.status %>
                </div>
              </div>
            </div>
          <% }); %>
        </div>
      </div>
    </div>
  </div>

  <!-- Phase Configuration Modal -->
  <div class="modal fade" id="phaseConfigModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Configure Phase</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <form action="/projects/<%= project.config.name %>/phase/configure" method="POST">
          <div class="modal-body">
            <div class="mb-3">
              <label for="phase-name" class="form-label">Phase Name</label>
              <input type="text" class="form-control" id="phase-name" name="name" value="<%= project.config.currentPhase %>" required>
            </div>
            <div class="mb-3">
              <label for="template-type" class="form-label">Template Type</label>
              <select class="form-select" id="template-type" name="templateType" required>
                <option value="structure" <%= project.config.currentTemplateType === 'structure' ? 'selected' : '' %>>Structure Analysis</option>
                <option value="features" <%= project.config.currentTemplateType === 'features' ? 'selected' : '' %>>Feature Suggestions</option>
                <option value="steps" <%= project.config.currentTemplateType === 'steps' ? 'selected' : '' %>>Development Steps</option>
                <option value="custom" <%= project.config.currentTemplateType === 'custom' ? 'selected' : '' %>>Custom</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="concurrent-tasks" class="form-label">Maximum Concurrent Tasks</label>
              <input type="number" class="form-control" id="concurrent-tasks" name="concurrentTasks" value="<%= project.config.concurrentTasks || 5 %>" min="1" max="20">
            </div>
            <div class="mb-3">
              <div class="form-check">
                <input class="form-check-input" type="checkbox" id="requires-analysis" name="requiresAnalysis" <%= project.config.requiresAnalysis ? 'checked' : '' %>>
                <label class="form-check-label" for="requires-analysis">
                  Requires Code Analysis
                </label>
              </div>
            </div>
            <div class="mb-3">
              <label for="phase-template" class="form-label">Phase Template</label>
              <textarea class="form-control template-editor" id="phase-template" name="template"><%= project.config.phaseTemplate || '' %></textarea>
              <div class="form-text">Use {{variable}} syntax for dynamic content</div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-primary">Save Configuration</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Add Message Modal -->
  <div class="modal fade" id="addMessageModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Add Message</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <form action="/projects/<%= project.config.name %>/messages/add" method="POST">
          <div class="modal-body">
            <div class="mb-3">
              <label for="message-title" class="form-label">Title</label>
              <input type="text" class="form-control" id="message-title" name="title" required>
            </div>
            <div class="mb-3">
              <label for="message-template" class="form-label">Template</label>
              <select class="form-select" id="message-template" name="template" required>
                <% (config.templates || []).forEach(template => { %>
                  <option value="<%= template.id %>"><%= template.name %></option>
                <% }); %>
              </select>
            </div>
            <div class="mb-3">
              <label class="form-label">Dependencies</label>
              <div id="dependencies">
                <div class="input-group mb-2">
                  <input type="text" class="form-control" name="dependencies[]" placeholder="Dependency">
                  <button class="btn btn-outline-danger" type="button" onclick="removeDependency(this)">
                    <i class="bi bi-dash"></i>
                  </button>
                </div>
              </div>
              <button type="button" class="btn btn-outline-primary btn-sm" onclick="addDependency()">
                <i class="bi bi-plus"></i> Add Dependency
              </button>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-primary">Add Message</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    function addDependency() {
      const dependencies = document.getElementById('dependencies');
      const html = `
        <div class="input-group mb-2">
          <input type="text" class="form-control" name="dependencies[]" placeholder="Dependency">
          <button class="btn btn-outline-danger" type="button" onclick="removeDependency(this)">
            <i class="bi bi-dash"></i>
          </button>
        </div>
      `;
      dependencies.insertAdjacentHTML('beforeend', html);
    }
    
    function removeDependency(button) {
      button.closest('.input-group').remove();
    }
    
    function startPhase() {
      fetch(`/projects/<%= project.config.name %>/phase/start`, {
        method: 'POST'
      }).then(response => {
        if (response.ok) {
          window.location.reload();
        }
      });
    }
  </script>
</body>
</html>
